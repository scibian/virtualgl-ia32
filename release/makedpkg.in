#!/bin/sh

set -u
set -e
trap onexit INT
trap onexit TERM
trap onexit EXIT

TMPDIR=
SUDO=

onexit()
{
	if [ ! "$TMPDIR" = "" ]; then
		$SUDO rm -rf $TMPDIR
	fi
}

uid()
{
	id | cut -f2 -d = | cut -f1 -d \(;
}

safedirmove ()
{
	if [ "$1" = "$2" ]; then
		return 0
	fi
	if [ "$1" = "" -o ! -d "$1" ]; then
		echo safedirmove: source dir $1 is not valid
		return 1
	fi
	if [ "$2" = "" -o -e "$2" ]; then
		echo safedirmove: dest dir $2 is not valid
		return 1
	fi
	if [ "$3" = "" -o -e "$3" ]; then
		echo safedirmove: tmp dir $3 is not valid
		return 1
	fi
	mkdir -p $3
	mv $1/* $3/
	rmdir $1
	mkdir -p $2
	mv $3/* $2/
	rmdir $3
	return 0
}

makedeb()
{
	SUPPLEMENT=$1
	PACKAGE_NAME=$APPNAME

	if [ $SUPPLEMENT = 1 ]; then
		PACKAGE_NAME=$APPNAME\32
		DEBARCH=amd64
	fi

	umask 022
	rm -f $PACKAGE_NAME\_$VERSION\_$DEBARCH.deb
	TMPDIR=`mktemp -d /tmp/$APPNAME-build.XXXXXX`
	mkdir $TMPDIR/DEBIAN

	make install DESTDIR=$TMPDIR
	rm $TMPDIR/$BINDIR/.vglrun.vars*
	mkdir -p $TMPDIR/usr

	if [ $SUPPLEMENT = 1 ]; then

		rm -rf $TMPDIR/$DOCDIR
		rm -rf $TMPDIR/$INCDIR
		mv $TMPDIR/$BINDIR/glxspheres* $TMPDIR/
		rm -rf $TMPDIR/$BINDIR
		mkdir -p $TMPDIR/$BINDIR
		mv $TMPDIR/glxspheres* $TMPDIR/$BINDIR/

		SIZE=`du -s $TMPDIR | cut -f1`
		cat pkgscripts/deb-control | sed s/i386/$DEBARCH/g \
			| sed s/virtualgl/$PACKAGE_NAME/g | sed s/{__SIZE}/$SIZE/g \
			> $TMPDIR/DEBIAN/control

		if [ ! "$LIBDIR" = "/usr/lib/i386-linux-gnu" ]; then
			if [ ! "$LIBDIR" = "/usr/lib32" ]; then
				safedirmove $TMPDIR/$LIBDIR $TMPDIR/usr/lib32 $TMPDIR/__tmplib
			fi
			mkdir -p $TMPDIR/usr/lib/i386-linux-gnu
			ln -fs /usr/lib32/librrfaker.so $TMPDIR/usr/lib/i386-linux-gnu/librrfaker.so
			ln -fs /usr/lib32/libdlfaker.so $TMPDIR/usr/lib/i386-linux-gnu/libdlfaker.so
			ln -fs /usr/lib32/libgefaker.so $TMPDIR/usr/lib/i386-linux-gnu/libgefaker.so
		fi
		rm $TMPDIR/$FAKELIBDIR/libGL.so
		ln -fs /usr/lib32/librrfaker.so $TMPDIR/$FAKELIBDIR/libGL.so

	else

		SIZE=`du -s $TMPDIR | cut -f1`
		cat pkgscripts/deb-control | sed s/{__SIZE}/$SIZE/g \
			> $TMPDIR/DEBIAN/control

		if [ ! "$LIBDIR" = "/usr/lib" ]; then
			safedirmove $TMPDIR/$LIBDIR $TMPDIR/usr/lib $TMPDIR/__tmplib
		fi

		if [ ! "$BINDIR" = "/usr/bin" ]; then
			mkdir -p $TMPDIR/usr/bin
			__PWD=$PWD
			cd $TMPDIR/$BINDIR
			for i in vgl*; do
				ln -fs $BINDIR/$i $TMPDIR/usr/bin/
			done
			cd $__PWD
		fi

		if [ ! "$INCDIR" = "/usr/include" ]; then
			mkdir -p $TMPDIR/usr/include
			__PWD=$PWD
			cd $TMPDIR/$INCDIR
			for i in *; do
				ln -fs $INCDIR/$i $TMPDIR/usr/include/$i
			done
			cd $__PWD
		fi

		safedirmove $TMPDIR/$DOCDIR $TMPDIR/usr/share/doc/$APPNAME-$VERSION $TMPDIR/__tmpdoc 
		if [ "$PREFIX" = "/opt/VirtualGL" ]; then
			ln -fs /usr/share/doc/$APPNAME-$VERSION $TMPDIR/$PREFIX/doc
		fi

		rm $TMPDIR/$FAKELIBDIR/libGL.so
		ln -fs /usr/lib/librrfaker.so $TMPDIR/$FAKELIBDIR/libGL.so

	fi

	$SUDO chown -Rh root:root $TMPDIR/*
	dpkg -b $TMPDIR $PACKAGE_NAME\_$VERSION\_$DEBARCH.deb
}

APPNAME=@CMAKE_PROJECT_NAME_LC@
VERSION=@VERSION@
BUILD=@BUILD@
DEBARCH=@DEBARCH@
PREFIX=@CMAKE_INSTALL_PREFIX@
BINDIR=@VGL_BINDIR@
DOCDIR=@VGL_DOCDIR@
FAKELIBDIR=@VGL_FAKELIBDIR@
INCDIR=@VGL_INCDIR@
LIBDIR=@VGL_LIBDIR@

if [ ! `uid` -eq 0 ]; then
	SUDO=sudo
fi

makedeb 0
if [ "$DEBARCH" = "i386" ]; then makedeb 1; fi

exit
